{"version":3,"sources":["components/Button.js","components/ButtonList.js","components/AutoScalingText.js","components/Display.js","components/calculator.js","logic/operate.js","app.js","logic/calculate.js","index.js"],"names":["Button","props","state","handleClick","bind","this","value","className","type","onClick","Component","ButtonList","digits","functionsKeys","operatorsKeys","numberKeyPad","map","btn","functionKeyPad","operatorsKeyPad","AutoScalingText","scale","node","actualScale","parentNode","offsetWidth","setState","style","transform","ref","children","Display","handleChange","e","display","target","defaultProp","Calculator","click","operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","div","mod","Error","App","total","next","btnName","obj","buttonName","match","includes","parseFloat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e3fe236.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Button extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    const { handleClick, value } = this.props;\n    handleClick(value);\n  }\n\n  render() {\n    const { value, className } = this.props;\n    return (\n      <button\n        type=\"button\"\n        className={className}\n        onClick={this.handleClick}\n      >\n        {value}\n      </button>\n    );\n  }\n}\n\nexport default Button;\n\nButton.propTypes = {\n  value: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Button from './Button';\n\nclass ButtonList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      digits: [\n        { value: '0', className: 'key key-0' },\n        { value: '.', className: 'key key-dot' },\n        { value: '1', className: 'key' },\n        { value: '2', className: 'key' },\n        { value: '3', className: 'key' },\n        { value: '4', className: 'key' },\n        { value: '5', className: 'key' },\n        { value: '6', className: 'key' },\n        { value: '7', className: 'key' },\n        { value: '8', className: 'key' },\n        { value: '9', className: 'key' },\n      ],\n      functionsKeys: [\n        { value: 'AC', className: 'key' },\n        { value: '+/-', className: 'key' },\n        { value: '%', className: 'key' },\n      ],\n      operatorsKeys: [\n        { value: 'รท', className: 'key' },\n        { value: 'x', className: 'key key-multiply' },\n        { value: '-', className: 'key' },\n        { value: '+', className: 'key' },\n        { value: '=', className: 'key' },\n      ],\n    };\n  }\n\n  render() {\n    const { handleClick } = this.props;\n    const { digits, functionsKeys, operatorsKeys } = this.state;\n    const numberKeyPad = digits.map((btn) => (\n      <Button\n        key={btn.value}\n        value={btn.value}\n        className={btn.className}\n        handleClick={handleClick}\n      />\n    ));\n\n    const functionKeyPad = functionsKeys.map((btn) => (\n      <Button\n        key={btn.value}\n        value={btn.value}\n        className={btn.className}\n        handleClick={handleClick}\n      />\n    ));\n\n    const operatorsKeyPad = operatorsKeys.map((btn) => (\n      <Button\n        key={btn.value}\n        value={btn.value}\n        className={btn.className}\n        handleClick={handleClick}\n      />\n    ));\n\n    return (\n      <>\n        <div className=\"keypad\">\n          <div className=\"input-keys\">\n            <div className=\"function-keys\">\n              {functionKeyPad}\n            </div>\n            <div className=\"digit-keys\">\n              {numberKeyPad}\n            </div>\n          </div>\n          <div className=\"operator-keys\">\n            {operatorsKeyPad}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default ButtonList;\n\nButtonList.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n};\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/destructuring-assignment */\nimport { Component } from 'react';\n\nclass AutoScalingText extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      scale: 1,\n    };\n  }\n\n  componentDidUpdate() {\n    const { scale } = this.state;\n\n    const { node } = this;\n    const { parentNode } = node;\n\n    const availableWidth = parentNode.offsetWidth;\n    const actualWidth = node.offsetWidth;\n    const actualScale = availableWidth / actualWidth;\n\n    if (scale === actualScale) return;\n\n    if (actualScale < 1) {\n      this.scale().setState({ scale: actualScale });\n    } else if (scale < 1) {\n      this.scale().setState({ scale: 1 });\n    }\n  }\n\n  scale() {\n    return this;\n  }\n\n  render() {\n    const { scale } = this.state;\n\n    return (\n      <div\n        className=\"auto-scaling-text\"\n        style={{ transform: `scale(${scale},${scale})` }}\n        ref={(node) => { this.node = node; }}\n      >\n        { this.props.children }\n      </div>\n    );\n  }\n}\n\nexport default AutoScalingText;\n","/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/prefer-stateless-function */\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AutoScalingText from './AutoScalingText';\n\nclass Display extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleChange = (e) => {\n    const { display } = this.props;\n    e.target.value = display;\n  }\n\n  render() {\n    const { display } = this.props;\n    return (\n      <div className=\"calc-display\">\n        <AutoScalingText>{display}</AutoScalingText>\n      </div>\n    );\n  }\n}\n\nDisplay.propTypes = {\n  display: PropTypes.string.isRequired,\n};\n\nDisplay.defaultProp = {\n  value: '0',\n};\n\nexport default Display;\n","/* eslint-disable react/button-has-type */\nimport PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport BonusList from './ButtonList';\nimport Display from './Display';\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport default class Calculator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { display, click } = this.props;\n    return (\n      <>\n        <div className=\"calc\">\n          <Display display={display} />\n          <BonusList handleClick={click} />\n        </div>\n      </>\n    );\n  }\n}\n\nCalculator.propTypes = {\n  display: PropTypes.string.isRequired,\n  click: PropTypes.func.isRequired,\n};\n","import Big from 'big.js';\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne);\n  const two = Big(numberTwo);\n  if (operation === '+') {\n    return one.plus(two).toString();\n  }\n  if (operation === '-') {\n    return one.minus(two).toString();\n  }\n  if (operation === 'x') {\n    return one.times(two).toString();\n  }\n  if (operation === 'รท') {\n    return one.div(two).toString();\n  }\n  if (operation === '%') {\n    return one.mod(two).toString();\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n","import { Component } from 'react';\nimport Calculator from './components/calculator';\nimport calculate from './logic/calculate';\nimport './app.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      total: null,\n      next: null,\n      operation: null,\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(btnName) {\n    const { total, next, operation } = this.state;\n    this.setState(() => calculate({ total, next, operation }, btnName));\n  }\n\n  render() {\n    const { next, total } = this.state;\n    return (\n      <Calculator\n        click={this.handleClick}\n        display={next || total || '0'}\n      />\n    );\n  }\n}\nexport default App;\n","import operate from './operate';\n\nfunction isNumber(item) {\n  return !!item.match(/[0-9]+/);\n}\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:s      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === 'AC') {\n    return {\n      total: null,\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    if (buttonName === '0' && obj.next === '0') {\n      return {};\n    }\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { next: obj.next + buttonName };\n      }\n      return { next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      return {\n        next: obj.next + buttonName,\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === '.') {\n    if (obj.next) {\n      if (obj.next.includes('.')) {\n        return {};\n      }\n      return { next: `${obj.next}.` };\n    }\n    if (obj.operation) {\n      return { next: '0.' };\n    }\n    if (obj.total) {\n      if (obj.total.includes('.')) {\n        return {};\n      }\n      return { total: `${obj.total}.` };\n    }\n    return { total: '0.' };\n  }\n\n  if (buttonName === '=') {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    }\n    // '=' with no operation, nothing to do\n    return {};\n  }\n\n  if (buttonName === '+/-') {\n    if (obj.next) {\n      return { next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!obj.next && !obj.total) {\n  //   return {};\n  // }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}