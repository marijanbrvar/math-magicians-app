{"version":3,"sources":["components/Button.js","components/ButtonList.js","components/AutoScalingText.js","components/Display.js","components/calculator.js","components/Header.js","logic/operate.js","components/Home.js","components/Quote.js","app.js","logic/calculate.js","index.js"],"names":["Button","props","value","className","handleClick","type","onClick","ButtonList","digits","functionsKeys","operatorsKeys","createNumberKeyPad","React","useMemo","map","btn","createFunctionKeyPad","createOperatorsKeyPad","AutoScalingText","state","scale","this","node","actualScale","parentNode","offsetWidth","setState","style","transform","ref","children","Component","Display","display","onChange","e","target","defaultProp","Calculator","click","Header","to","operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","div","mod","Error","Home","Quote","App","useState","total","next","id","exact","path","btnName","newState","obj","buttonName","match","result","includes","parseFloat","calculate","prevState","ReactDOM","render","document","getElementById"],"mappings":"+QAyBeA,EAvBA,SAACC,GACd,IAAQC,EAAkCD,EAAlCC,MAAOC,EAA2BF,EAA3BE,UAAWC,EAAgBH,EAAhBG,YAM1B,OACE,wBACEC,KAAK,SACLF,UAAWA,EACXG,QARJ,WACEF,EAAYF,IAIZ,SAKGA,KCgFQK,EA3FI,SAACN,GAClB,IAAMO,EAAS,CACb,CAAEN,MAAO,IAAKC,UAAW,aACzB,CAAED,MAAO,IAAKC,UAAW,eACzB,CAAED,MAAO,IAAKC,UAAW,OACzB,CAAED,MAAO,IAAKC,UAAW,OACzB,CAAED,MAAO,IAAKC,UAAW,OACzB,CAAED,MAAO,IAAKC,UAAW,OACzB,CAAED,MAAO,IAAKC,UAAW,OACzB,CAAED,MAAO,IAAKC,UAAW,OACzB,CAAED,MAAO,IAAKC,UAAW,OACzB,CAAED,MAAO,IAAKC,UAAW,OACzB,CAAED,MAAO,IAAKC,UAAW,QAGrBM,EAAgB,CACpB,CAAEP,MAAO,KAAMC,UAAW,OAC1B,CAAED,MAAO,MAAOC,UAAW,OAC3B,CAAED,MAAO,IAAKC,UAAW,QAGrBO,EAAgB,CACpB,CAAER,MAAO,OAAKC,UAAW,OACzB,CAAED,MAAO,IAAKC,UAAW,oBACzB,CAAED,MAAO,IAAKC,UAAW,OACzB,CAAED,MAAO,IAAKC,UAAW,OACzB,CAAED,MAAO,IAAKC,UAAW,QAGrBQ,EAAqBC,IAAMC,SAAQ,WACvC,IAAQT,EAAgBH,EAAhBG,YAWR,OATqBI,EAAOM,KAAI,SAACC,GAAD,OAC9B,cAAC,EAAD,CAEEb,MAAOa,EAAIb,MACXC,UAAWY,EAAIZ,UACfC,YAAaA,GAHRW,EAAIb,aAUTc,EAAuBJ,IAAMC,SAAQ,WACzC,IAAQT,EAAgBH,EAAhBG,YAUR,OATuBK,EAAcK,KAAI,SAACC,GAAD,OACvC,cAAC,EAAD,CAEEb,MAAOa,EAAIb,MACXC,UAAWY,EAAIZ,UACfC,YAAaA,GAHRW,EAAIb,aAUTe,EAAwBL,IAAMC,SAAQ,WAC1C,IAAQT,EAAgBH,EAAhBG,YAUR,OATwBM,EAAcI,KAAI,SAACC,GAAD,OACxC,cAAC,EAAD,CAEEb,MAAOa,EAAIb,MACXC,UAAWY,EAAIZ,UACfC,YAAaA,GAHRW,EAAIb,aAUf,OACE,mCACE,sBAAKC,UAAU,SAAf,UACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,gBAAf,SACGa,IAEH,qBAAKb,UAAU,aAAf,SACGQ,OAGL,qBAAKR,UAAU,gBAAf,SACGc,U,gCCtCIC,E,kDA7Cb,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IACDkB,MAAQ,CACXC,MAAO,GAHQ,E,sDAOnB,WACE,IAAQA,EAAUC,KAAKF,MAAfC,MAEAE,EAASD,KAATC,KAKFC,EAJiBD,EAAfE,WAE0BC,YACdH,EAAKG,YAGrBL,IAAUG,IAEVA,EAAc,EAChBF,KAAKD,QAAQM,SAAS,CAAEN,MAAOG,IACtBH,EAAQ,GACjBC,KAAKD,QAAQM,SAAS,CAAEN,MAAO,O,mBAInC,WACE,OAAOC,O,oBAGT,WAAU,IAAD,OACCD,EAAUC,KAAKF,MAAfC,MAER,OACE,qBACEjB,UAAU,oBACVwB,MAAO,CAAEC,UAAU,SAAD,OAAWR,EAAX,YAAoBA,EAApB,MAClBS,IAAK,SAACP,GAAW,EAAKA,KAAOA,GAH/B,SAKID,KAAKpB,MAAM6B,e,GAxCSC,aCCxBC,EAAU,SAAC/B,GACf,IAAQgC,EAAYhC,EAAZgC,QAMR,OACE,qBAAK9B,UAAU,eAAe+B,SALhC,SAAsBC,GACpBA,EAAEC,OAAOlC,MAAQ+B,GAIjB,SACE,cAAC,EAAD,UAAkBA,OASxBD,EAAQK,YAAc,CACpBnC,MAAO,KAGM8B,QCEAM,EAxBI,SAACrC,GAClB,IAAQgC,EAAmBhC,EAAnBgC,QAASM,EAAUtC,EAAVsC,MAEjB,OACE,sBAAKpC,UAAU,YAAf,UACE,gCACE,4CACA,sDAEF,qBAAKA,UAAU,iBAAf,SACE,sBAAKA,UAAU,OAAf,UACE,cAAC,EAAD,CAAS8B,QAASA,IAClB,cAAC,EAAD,CAAW7B,YAAamC,aCEnBC,G,MAfA,kBACb,yBAAQrC,UAAU,SAAlB,UACE,8BACE,kDAEF,8BACE,gCACE,cAAC,IAAD,CAAMsC,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,cAAT,wBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,6B,gBCXO,SAASC,EAAQC,EAAWC,EAAWC,GACpD,IAAMC,EAAMC,IAAIJ,GAAa,KACvBK,EAAMD,IAAIH,IAA4B,SAAdC,GAAmC,MAAdA,EAAoB,IAAM,MAC7E,GAAkB,MAAdA,EACF,OAAOC,EAAIG,KAAKD,GAAKE,WAEvB,GAAkB,MAAdL,EACF,OAAOC,EAAIK,MAAMH,GAAKE,WAExB,GAAkB,MAAdL,EACF,OAAOC,EAAIM,MAAMJ,GAAKE,WAExB,GAAkB,SAAdL,EACF,MAAuB,MAAnBG,EAAIE,WAA2B,MAC5BJ,EAAIO,IAAIL,GAAKE,WAEtB,GAAkB,MAAdL,EACF,OAAOC,EAAIQ,IAAIN,GAAKE,WAEtB,MAAMK,MAAM,sBAAD,OAAuBV,EAAvB,M,gBCSEW,EA1BF,kBACX,sBAAKrD,UAAU,iBAAf,UACE,sDACA,+BACE,6BACE,gHAEF,6BACE,kIAEF,6BACE,8LAEF,6BACE,kKAEF,6BACE,gLAEF,6BACE,+LCFOsD,EAlBD,kBACZ,sBAAKtD,UAAU,iBAAf,UACE,sDACA,+BACE,+BACE,qKACA,sDAEF,+BACE,0MAGA,6DC8BOuD,EArCH,WACV,MAA0BC,mBACxB,CACEC,MAAO,KACPC,KAAM,KACNhB,UAAW,OAJf,mBAAO1B,EAAP,KAAcO,EAAd,KAgBA,OACE,sBAAKoC,GAAG,UAAR,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,cAAZ,SACE,cAAC,EAAD,CACEzB,MAjBU,SAAC0B,GACnB,IAAMC,ECHK,SAAmBC,EAAKC,GACrC,GAAmB,OAAfA,EACF,MAAO,CACLR,MAAO,KACPC,KAAM,KACNhB,UAAW,MAIf,GAAauB,EArBCC,MAAM,UAsBlB,MAAmB,MAAfD,GAAmC,MAAbD,EAAIN,KACrB,GAILM,EAAItB,UACFsB,EAAIN,KACC,CAAEA,KAAMM,EAAIN,KAAOO,GAErB,CAAEP,KAAMO,GAGbD,EAAIN,KAEC,CACLA,KAFwB,MAAbM,EAAIN,KAAeO,EAAaD,EAAIN,KAAOO,EAGtDR,MAAO,MAGJ,CACLC,KAAMO,EACNR,MAAO,MAIX,GAAmB,MAAfQ,EAAoB,CACtB,GAAID,EAAItB,WAAasB,EAAIN,KAAM,CAC7B,IAAMS,EAAS5B,EAAQyB,EAAIP,MAAOO,EAAIN,KAAMM,EAAItB,WAChD,MAAO,CACLe,MAAOb,IAAIuB,GACRjB,IAAIN,IAAI,QACRG,WACHW,KAAM,KACNhB,UAAW,MAGf,OAAIsB,EAAIN,KACC,CACLA,KAAM,KACND,MAAOO,EAAIN,KACRX,WACHL,UAAWuB,GAGR,GAGT,MAAmB,MAAfA,EACED,EAAIN,KAEFM,EAAIN,KAAKU,SAAS,KACb,GAEF,CAAEV,KAAK,GAAD,OAAKM,EAAIN,KAAT,MAER,CAAEA,KAAM,MAGE,MAAfO,EACED,EAAIN,MAAQM,EAAItB,UACX,CACLe,MAAOlB,EAAQyB,EAAIP,MAAOO,EAAIN,KAAMM,EAAItB,WACxCgB,KAAM,KACNhB,UAAW,MAIR,GAGU,QAAfuB,EACED,EAAIN,KACC,CAAEA,OAAQ,EAAIW,WAAWL,EAAIN,OAAOX,YAEzCiB,EAAIP,MACC,CAAEA,QAAS,EAAIY,WAAWL,EAAIP,QAAQV,YAExC,GAYLiB,EAAItB,UACC,CACLe,MAAOlB,EAAQyB,EAAIP,MAAOO,EAAIN,KAAMM,EAAItB,WACxCgB,KAAM,KACNhB,UAAWuB,GAOVD,EAAIN,KAKF,CACLD,MAAOO,EAAIN,KACXA,KAAM,KACNhB,UAAWuB,GAPJ,CAAEvB,UAAWuB,GD5GHK,CAAUtD,EAAO8C,GAClCvC,GAAS,SAACgD,GAAD,mBAAC,eACLA,GACAR,OAcGjC,QAASd,EAAM0C,MAAQ1C,EAAMyC,OAAS,QAG1C,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,SAAlB,SACE,cAAC,EAAD,aEnCVW,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MACSC,SAASC,eAAe,W","file":"static/js/main.41757fc5.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst Button = (props) => {\n  const { value, className, handleClick } = props;\n\n  function clickHandler() {\n    handleClick(value);\n  }\n\n  return (\n    <button\n      type=\"button\"\n      className={className}\n      onClick={clickHandler}\n    >\n      {value}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  value: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\nexport default Button;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Button from './Button';\n\nconst ButtonList = (props) => {\n  const digits = [\n    { value: '0', className: 'key key-0' },\n    { value: '.', className: 'key key-dot' },\n    { value: '1', className: 'key' },\n    { value: '2', className: 'key' },\n    { value: '3', className: 'key' },\n    { value: '4', className: 'key' },\n    { value: '5', className: 'key' },\n    { value: '6', className: 'key' },\n    { value: '7', className: 'key' },\n    { value: '8', className: 'key' },\n    { value: '9', className: 'key' },\n  ];\n\n  const functionsKeys = [\n    { value: 'AC', className: 'key' },\n    { value: '+/-', className: 'key' },\n    { value: '%', className: 'key' },\n  ];\n\n  const operatorsKeys = [\n    { value: 'รท', className: 'key' },\n    { value: 'x', className: 'key key-multiply' },\n    { value: '-', className: 'key' },\n    { value: '+', className: 'key' },\n    { value: '=', className: 'key' },\n  ];\n\n  const createNumberKeyPad = React.useMemo(() => {\n    const { handleClick } = props;\n\n    const numberKeyPad = digits.map((btn) => (\n      <Button\n        key={btn.value}\n        value={btn.value}\n        className={btn.className}\n        handleClick={handleClick}\n      />\n    ));\n\n    return numberKeyPad;\n  });\n\n  const createFunctionKeyPad = React.useMemo(() => {\n    const { handleClick } = props;\n    const functionKeyPad = functionsKeys.map((btn) => (\n      <Button\n        key={btn.value}\n        value={btn.value}\n        className={btn.className}\n        handleClick={handleClick}\n      />\n    ));\n\n    return functionKeyPad;\n  });\n\n  const createOperatorsKeyPad = React.useMemo(() => {\n    const { handleClick } = props;\n    const operatorsKeyPad = operatorsKeys.map((btn) => (\n      <Button\n        key={btn.value}\n        value={btn.value}\n        className={btn.className}\n        handleClick={handleClick}\n      />\n    ));\n\n    return operatorsKeyPad;\n  });\n\n  return (\n    <>\n      <div className=\"keypad\">\n        <div className=\"input-keys\">\n          <div className=\"function-keys\">\n            {createFunctionKeyPad}\n          </div>\n          <div className=\"digit-keys\">\n            {createNumberKeyPad}\n          </div>\n        </div>\n        <div className=\"operator-keys\">\n          {createOperatorsKeyPad}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ButtonList;\n\nButtonList.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n};\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/destructuring-assignment */\nimport { Component } from 'react';\n\nclass AutoScalingText extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      scale: 1,\n    };\n  }\n\n  componentDidUpdate() {\n    const { scale } = this.state;\n\n    const { node } = this;\n    const { parentNode } = node;\n\n    const availableWidth = parentNode.offsetWidth;\n    const actualWidth = node.offsetWidth;\n    const actualScale = availableWidth / actualWidth;\n\n    if (scale === actualScale) return;\n\n    if (actualScale < 1) {\n      this.scale().setState({ scale: actualScale });\n    } else if (scale < 1) {\n      this.scale().setState({ scale: 1 });\n    }\n  }\n\n  scale() {\n    return this;\n  }\n\n  render() {\n    const { scale } = this.state;\n\n    return (\n      <div\n        className=\"auto-scaling-text\"\n        style={{ transform: `scale(${scale},${scale})` }}\n        ref={(node) => { this.node = node; }}\n      >\n        { this.props.children }\n      </div>\n    );\n  }\n}\n\nexport default AutoScalingText;\n","/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/prefer-stateless-function */\nimport PropTypes from 'prop-types';\nimport AutoScalingText from './AutoScalingText';\n\nconst Display = (props) => {\n  const { display } = props;\n\n  function handleChange(e) {\n    e.target.value = display;\n  }\n\n  return (\n    <div className=\"calc-display\" onChange={handleChange}>\n      <AutoScalingText>{display}</AutoScalingText>\n    </div>\n  );\n};\n\nDisplay.propTypes = {\n  display: PropTypes.string.isRequired,\n};\n\nDisplay.defaultProp = {\n  value: '0',\n};\n\nexport default Display;\n","/* eslint-disable react/button-has-type */\nimport PropTypes from 'prop-types';\nimport BonusList from './ButtonList';\nimport Display from './Display';\n\nconst Calculator = (props) => {\n  const { display, click } = props;\n\n  return (\n    <div className=\"container\">\n      <div>\n        <h1>Calculator</h1>\n        <p>Lets do some Math!</p>\n      </div>\n      <div className=\"calc-container\">\n        <div className=\"calc\">\n          <Display display={display} />\n          <BonusList handleClick={click} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nCalculator.propTypes = {\n  display: PropTypes.string.isRequired,\n  click: PropTypes.func.isRequired,\n};\n\nexport default Calculator;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './header.css';\n\nconst Header = () => (\n  <header className=\"header\">\n    <div>\n      <h1>Math Magicians</h1>\n    </div>\n    <div>\n      <nav>\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/calculator\">Calculator</Link>\n        <Link to=\"/quote\">Quote</Link>\n      </nav>\n    </div>\n  </header>\n);\n\nexport default Header;\n","import Big from 'big.js';\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne || '0');\n  const two = Big(numberTwo || (operation === 'รท' || operation === 'x' ? '1' : '0'));\n  if (operation === '+') {\n    return one.plus(two).toString();\n  }\n  if (operation === '-') {\n    return one.minus(two).toString();\n  }\n  if (operation === 'x') {\n    return one.times(two).toString();\n  }\n  if (operation === 'รท') {\n    if (two.toString() === '0') return 'n/a';\n    return one.div(two).toString();\n  }\n  if (operation === '%') {\n    return one.mod(two).toString();\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n","/* eslint-disable max-len */\nimport React from 'react';\nimport './home.css';\n\nconst Home = () => (\n  <div className=\"home-container\">\n    <h1>Calculator Home page</h1>\n    <ul>\n      <li>\n        <p>Do you know 58,675,985 x 73,892,619? The calculator can calculate it for you.</p>\n      </li>\n      <li>\n        <p>Calculators are used to calculate numerals and equations, typically in mathematics or business.</p>\n      </li>\n      <li>\n        <p>The first mechanical calculator was invented by Blaise Pascal, a French mathematician, when he was 19 in 1642, to help is father calculate mathematic sums.</p>\n      </li>\n      <li>\n        <p>Calculators were originally gear driven wheels, but now they use a chip, typically a microchip, and some kind of energy source.</p>\n      </li>\n      <li>\n        <p>The first handheld calculator was invented by Texas Instruments, an American company, in 1967, and were further developed in the early 1970s.</p>\n      </li>\n      <li>\n        <p>School students are common users of calculators, using them to calculate difficult sums, although some say children are too dependent on the devices.</p>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default Home;\n","/* eslint-disable react/no-unescaped-entities */\n/* eslint-disable max-len */\nimport React from 'react';\n\nconst Quote = () => (\n  <div className=\"home-container\">\n    <h1>The Best Math Quotes</h1>\n    <ul>\n      <li>\n        <p>\"Math is the tool specially suited for dealing with abstract concepts of any kind and there is no limit to its power in this field.\"</p>\n        <i>โ Paul Dirac.</i>\n      </li>\n      <li>\n        <p>\n          \"There are two ways to do great mathematics. The first is to be smarter than everybody else. The second way is to be stupider than everybody else โ but persistent.\"\n        </p>\n        <i>โ Raoul Bott.</i>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default Quote;\n","import { useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Calculator from './components/calculator';\nimport Header from './components/Header';\nimport calculate from './logic/calculate';\nimport './app.css';\nimport Home from './components/Home';\nimport Quote from './components/Quote';\n\nconst App = () => {\n  const [state, setState] = useState(\n    {\n      total: null,\n      next: null,\n      operation: null,\n    },\n  );\n\n  const handleClick = (btnName) => {\n    const newState = calculate(state, btnName);\n    setState((prevState) => ({\n      ...prevState,\n      ...newState,\n    }));\n  };\n\n  return (\n    <div id=\"wrapper\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/calculator\">\n          <Calculator\n            click={handleClick}\n            display={state.next || state.total || '0'}\n          />\n        </Route>\n        <Route exact path=\"/quote\">\n          <Quote />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\nexport default App;\n","import Big from 'big.js';\nimport operate from './operate';\n\nfunction isNumber(item) {\n  return !!item.match(/[0-9]+/);\n}\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:s      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === 'AC') {\n    return {\n      total: null,\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    if (buttonName === '0' && obj.next === '0') {\n      return {};\n    }\n\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { next: obj.next + buttonName };\n      }\n      return { next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      const next = obj.next === '0' ? buttonName : obj.next + buttonName;\n      return {\n        next,\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === '%') {\n    if (obj.operation && obj.next) {\n      const result = operate(obj.total, obj.next, obj.operation);\n      return {\n        total: Big(result)\n          .div(Big('100'))\n          .toString(),\n        next: null,\n        operation: null,\n      };\n    }\n    if (obj.next) {\n      return {\n        next: null,\n        total: obj.next\n          .toString(),\n        operation: buttonName,\n      };\n    }\n    return {};\n  }\n\n  if (buttonName === '.') {\n    if (obj.next) {\n      // ignore a . if the next number already has one\n      if (obj.next.includes('.')) {\n        return {};\n      }\n      return { next: `${obj.next}.` };\n    }\n    return { next: '0.' };\n  }\n\n  if (buttonName === '=') {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    }\n    // '=' with no operation, nothing to do\n    return {};\n  }\n\n  if (buttonName === '+/-') {\n    if (obj.next) {\n      return { next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!obj.next && !obj.total) {\n  //   return {};\n  // }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './app';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>, document.getElementById('root'),\n);\n"],"sourceRoot":""}